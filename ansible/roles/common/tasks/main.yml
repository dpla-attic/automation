---

- name: Ensure correct kernel overcommitment settings
  template: >-
    src=etc_sysctl.d_60-overcommit.conf.j2 dest=/etc/sysctl.d/60-overcommit.conf
    mode=0644 owner=root group=root
  notify:
    - start procps
  tags:
    - kernel

- name: Update hostname resolver configuration
  template:
    src: etc_resolvconf_resolv.conf.d_base.j2
    dest: /etc/resolvconf/resolv.conf.d/base
    mode: 0644
    owner: root
    group: root
  notify: update resolv.conf

- meta: flush_handlers

- name: Set hostname
  hostname: name={{ inventory_hostname | replace('_', '-') }}
  tags:
    - networking

- name: Update hosts file
  # This works with "ansible-playbook" but not running from Vagrant, because
  # ansible-playbook will have spoken with all nodes in parallel with the
  # above task, and "vagrant provision" may not have.
  # Note also that it won't work if you use -l / --limit with ansible-playbook
  # to limit the hosts, becuase, in that case, not all hosts will have been
  # contacted.  I will implement a workaround for this, soon.
  template: src="hosts.j2" dest="/etc/hosts"
  tags:
    - networking

- name: Ensure correct time zone
  shell: >
      echo {{ iana_timezone }} > /etc/timezone; dpkg-reconfigure --frontend noninteractive tzdata
  tags:
    - packages
    - time

- name: Ensure correct locale
  template: src=etc_default_locale.j2 dest=/etc/default/locale mode=0644
  tags:
    - packages
    - locale

- name: Install packages
  apt: >-
    pkg="{{ item }}" state=present update_cache=yes
  with_items:
    - make
    - curl
    - sysstat
    - python-httplib2
    - python-psutil
    - ntp
    - munin-node
    - munin-plugins-extra
    - zlib1g-dev
    - debian-goodies
    - python-apt
    - apt-show-versions
  tags:
    - packages
    - munin

- name: Get rid of packages we don't want
  apt: >-
    pkg="{{ item }}" state=absent purge=yes
  with_items:
    - puppet
    - puppet-common
    - chef
    - chef-zero
    - landscape-common
    - landscape-client

- name: Remove Ubuntu Advantage Cloud Guest advertisement
  file: >
    path="/etc/update-motd.d/51-cloudguest" state=absent

- name: Disable default munin plugins that we don't need
  file: >
     path="/etc/munin/plugins/{{ item }}" state=absent
  with_items:
    - nfs4_client
    - nfs_client
    - nfsd
    - nfsd4
    - entropy
  notify: restart munin node
  tags:
    - munin

- name: Ensure that certain Munin plugins are enabled
  # Munin enables a lot of plugins by default, but these are just ones
  # that we want to ensure are running regardless of the defaults.
  file: >-
      src=/usr/share/munin/plugins/{{ item }}
      dest=/etc/munin/plugins/{{ item }}
      state=link owner=root group=root
  with_items:
    - netstat
    - tcp
  notify: restart munin node
  tags:
    - munin

- name: Ensure state of munin node configuration file
  template: src=munin-node.conf.j2 dest=/etc/munin/munin-node.conf owner=root group=root mode=0644
  notify: restart munin node
  tags:
    - munin

- name: Copy sysstat init defaults file
  copy: src=etc_default_sysstat dest=/etc/default/sysstat owner=root group=root mode=0644
  notify: restart sysstat
  tags:
    - packages

- name: Add admin accounts
  user: name="{{ item.username }}" comment="{{ item.gecos }}" state=present
        groups=admin,sudo shell=/bin/bash
  with_items: adminusers
  tags:
    - users

- name: Assign SSH authorized keys
  authorized_key: user="{{ item.username }}" key="{{ item.ssh_authorized_key }}"
  with_items: adminusers
  tags:
    - authorized_keys
    - users
    - ssh

- name: Update SSH client configuration
  copy: src=ssh_config dest=/etc/ssh/ssh_config owner=root group=root mode=0644
  tags:
    - packages
    - ssh

- name: Update systemwide SSH known hosts
  copy: >
      src=etc_ssh_ssh_known_hosts dest=/etc/ssh/ssh_known_hosts
      owner=root group=root mode=0644
  tags:
    - ssh

- name: Ensure that users of 'admin' group can sudo without password
  copy: >
      src=etc_sudoers.d_exempt-group dest=/etc/sudoers.d/10-exempt-group
      owner=root group=root mode=0440
  tags:
    - sudo
    - users

- name: Install is_ingestion_running.sh script
  template: >-
      src=is_ingestion_running.sh.j2 dest=/usr/local/bin/is_ingestion_running
      owner=root group=root mode=0755
  tags:
    - ingestion
    - scripts

- name: Install notify_slack.sh script
  when: slack_webhook_url is defined
  template: >-
      src=notify_slack.sh.j2 dest=/usr/local/bin/notify_slack
      owner=root group=root mode=0755
  tags:
    - scripts
