---

- name: Ensure that MySQL server is installed
  apt: pkg={{ item }} state=present force=yes
  with_items:
    - mysql-server-5.5
    - mysql-client-5.5
    # python-mysqldb is for Ansible.
    - python-mysqldb
  tags:
    - mysql
    - packages

- name: Update MySQL configuration
  # This could be a template, but it's not necessary yet due to the small
  # size and lack of complexity of our MySQL database.
  copy: src=etc_mysql_my.cnf dest=/etc/mysql/my.cnf
  notify:
    - restart mysql
  tags:
    - mysql

- name: Update root password
  mysql_user: name=root
              password="{{ mysql_root_password }}"
  tags:
    - mysql

- name: Update .my.cnf files for admins
  template: src=home_my.cnf.j2
            dest="/home/{{ item['username'] }}/.my.cnf"
  with_items: adminusers
  tags:
    - mysql

- name: Update .my.cnf file for Ansible use
  template: src=home_my.cnf.j2 dest=/root/.my.cnf
  tags:
    - mysql

- name: Ensure existence of MySQL user accounts
  mysql_user: name={{ item['name']}}
              password={{ item['password']}}
              state=present
  with_items:  mysql_users
  tags:
    - mysql
    - mysql_user

- name: Make sure that the backups directory exists
  file: >-
    path="{{ mysql_backups_basedir }}" state=directory owner=root group=root mode=0755
  tags:
    - mysql
    - backups
- name: Make sure that the MySQL backups directory exists
  file: >-
    path="{{ mysql_backups_basedir }}/mysql" state=directory owner=root group=root mode=0770
  tags:
    - mysql
    - backups

- name: Ensure state of crontab file
  template: >-
      src=etc_cron.d_backup-mysql.j2 dest=/etc/cron.d/backup-mysql
      owner=root group=root mode=0644
  tags:
    - mysql
    - backups

