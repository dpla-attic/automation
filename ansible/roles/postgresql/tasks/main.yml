---

- name: Set kernel shared memory to be enough for PostgreSQL
  template: >-
      src="30-postgresql-shm.conf.j2"
      dest=/etc/sysctl.d/30-postgresql-shm.conf
      owner=root group=root mode=0644
  tags:
    - postgresql

- name: Load Kernel settings modified above
  command: sysctl -p /etc/sysctl.d/30-postgresql-shm.conf
  changed_when: false
  tags:
    - postgresql

- include: install.yml

- name: Ensure state of main PostgreSQL config file (postgresql.conf)
  template: >-
    src=postgresql.conf.j2
    dest="/etc/postgresql/{{ pg_version }}/main/postgresql.conf"
  notify:
    - restart postgresql
  tags:
    - postgresql

- name: Ensure state of PostgreSQL networking config file (pg_hba.conf)
  template: >-
    src=pg_hba.conf.j2
    dest="/etc/postgresql/{{ pg_version }}/main/pg_hba.conf"
  notify:
    - restart postgresql
  tags:
    - postgresql

- name: Make sure that PostgreSQL server environemnt variables are correct
  template: >-
    src=environment.j2
    dest="/etc/postgresql/{{ pg_version }}/main/environment"
  notify:
    - restart postgresql
  tags:
    - postgresql

- name: Make sure that SSL files are symlinked
  file: >-
    src="/etc/ssl/{{ item.src }}"
    dest="/var/lib/postgresql/{{ pg_version }}/main/{{ item.dest }}"
    state=link
  with_items:
    - { src: 'certs/ssl-cert-snakeoil.pem', dest: 'server.crt' }
    - { src: 'private/ssl-cert-snakeoil.key', dest: 'server.key' }
  notify:
    - restart postgresql
  tags:
    - postgresql

- meta: flush_handlers
  tags:
    - postgresql

- name: Ensure credentials of application PostgreSQL user
  postgresql_user: >
      name="{{ postgresql_user.name }}" password="{{ postgresql_user.password }}"
  become_user: postgres
  tags:
    - postgresql

- name: Make sure our databases exist
  postgresql_db: >-
      name={{ item }}
      encoding=UTF8
      lc_ctype={{ dpla_locale }}
      lc_collate={{ dpla_locale }}
      state=present
      template=template0
  become_user: postgres
  with_items:
    - api
    - pss
  tags:
    - postgresql

- name: Ensure privileges on databases
  # Assumes these are all the same, and "all privileges" is safe, given the circumstances.
  postgresql_privs: >-
      database="{{ item }}"
      roles="{{ postgresql_user.name }}"
      state=present
      type=database
      privs=ALL
  become_user: postgres
  with_items:
    - api
    - pss
  tags:
    - postgresql

- name: Make sure that the backups directory exists
  file: >-
    path="{{ pg_backups_basedir }}" state=directory owner=root group=root mode=0755
  tags:
    - postgresql
    - backups
- name: Make sure that the PostgreSQL backups directory exists
  file: >-
    path="{{ pg_backups_basedir }}/postgresql" state=directory
    owner=postgres group=postgres mode=0770
  tags:
    - postgresql
    - backups

- name: Ensure state of crontab file
  template: >-
      src=etc_cron.d_backup-pg.j2 dest=/etc/cron.d/backup-pg
      owner=root group=root mode=0644
  tags:
    - postgresql
    - backups

- name: Ensure that logfiles are rotated correctly
  template: >-
    src=etc_logrotate.d_postgresql-common.j2 dest=/etc/logrotate.d/postgresql-common
    owner=root group=root mode=0644
  tags:
    - postgresql
    - logrotate

## PostgreSQL Munin plugins
#

- name: Make sure Perl DBD::Pg module is installed
  apt: pkg=libdbd-pg-perl state=present
  tags:
    - munin
    - postgresql
    - packages

- name: Ensure state of configuration for Munin PostgreSQL plugin
  template: >-
      src=etc_munin_plugin_conf_d_zzz-postgresql.j2
      dest=/etc/munin/plugin-conf.d/zzz-postgresql
      owner=root group=root mode=0644
  notify: restart munin-node
  tags:
    - munin
    - postgresql

- name: Symlink basic Munin PostgreSQL plugins
  file: >-
    src="/usr/share/munin/plugins/{{ item }}"
    dest="/etc/munin/plugins/{{ item }}"
    state=link
  with_items:
    - postgres_bgwriter
    - postgres_checkpoints
    - postgres_connections_db
    - postgres_users
    - postgres_xlog
  tags:
    - munin
    - postgresql

- file: >-
    src="/usr/share/munin/plugins/postgres_{{ item }}_"
    dest="/etc/munin/plugins/postgres_{{ item }}_ALL"
    state=link
  with_items:
    - cache
    - connections
    - locks
    - querylength
    - size
    - transactions
  tags:
    - munin
    - postgresql


# Update queries in following munin plugins so they reference correct
# PostgreSQL 9.4 column names
#
#   * postgres_connections_
#   * postgres_connections_db
#   * postgres_users
#   * postgres_querylength_
- name: Patch plugins - replace 'procpid' with 'pid'
  replace: >-
    dest='/usr/share/munin/plugins/{{ item }}'
    regexp='\sprocpid'
    replace=' pid '
    backup=yes
  with_items:
    - postgres_connections_
    - postgres_connections_db
    - postgres_users
    - postgres_querylength_
  tags:
    - munin
    - postgresql

- name: Patch plugins - replace 'current_query' with 'query'
  replace: >-
    dest='/usr/share/munin/plugins/{{ item }}'
    regexp='\scurrent_query'
    replace=' query '
    backup=yes
  with_items:
    - postgres_connections_
    - postgres_connections_db
    - postgres_users
    - postgres_querylength_
  tags:
    - munin
    - postgresql
