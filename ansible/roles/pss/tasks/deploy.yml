---

- name: Clear /home/pss/pss symlink
  # It will be recreated below.
  file: path=/home/pss/pss state=absent

- name: Make sure that PSS build directories are clear
  when: clean_pss | default(false)
  file:
    path: "/home/pss/{{ item }}"
    state: absent
  with_items:
    - pss-git
    - pss-local

- name: Check out primary-source-sets app from its repository
  git: >-
      repo=https://github.com/dpla/primary-source-sets.git
      dest=/home/pss/pss-git
      version={{ pss_branch_or_tag }}
      force=true
  become_user: pss
  when: not pss_use_local_source

## Symlink to the build directory, to allow local and git builds to coexist
# neatly ...

# 1. For a git deployment ...
- file: src=/home/pss/pss-git dest=/home/pss/pss state=link
  when: not pss_use_local_source

- name: Check out primary source sets app from mounted directory
  script: copy_local_app.sh
  when: pss_use_local_source

# 2. For a local deployment ...
- file: src=/home/pss/pss-local dest=/home/pss/pss state=link
  when: pss_use_local_source

- name: Update primary-source-sets app database configuration file
  template:
    src: database.yml.j2
    dest: /home/pss/pss/config/database.yml
    owner: pss
    group: pss
    mode: 0640

- name: Update primary-source-sets app secrets configuration file
  template:
    src: secrets.yml.j2
    dest: /home/pss/pss/config/secrets.yml
    owner: pss
    group: pss
    mode: 0640

- name: Update primary-source-sets app settings
  template: >-
      src=settings.local.yml.j2
      dest=/home/pss/pss/config/settings.local.yml
      owner=pss group=webapp mode=0640

- name: Update primary-source-sets unicorn.rb
  template: >-
      src=unicorn.rb.j2 dest=/home/pss/pss/config/unicorn.rb
      owner=pss group=pss mode=0644

- name: Add dpla_frontend_assets to Gemfile if branding is turned on
  lineinfile: >
    dest=/home/pss/pss/Gemfile
    state=present
    regexp=dpla_frontend_assets
    line="gem 'dpla_frontend_assets', git: 'git@github.com:dpla/frontend-assets.git'"
  when: pss_include_branding

# To use "Clean rbenv", define the variable `clean_rbenv', which is not defined
# anywhere by default.
- name: Clean rbenv
  file:
    path: /home/pss/.rbenv
    state: absent
  when: clean_rbenv | default(false)

- name: Make sure that rbenv and bundler are current
  script: >-
      ../../../files/install_ruby_tools.sh {{ pss_rbenv_version }}
  become_user: pss

- name: Ensure the existence and permissions of necessary directories
  file:
    path: "{{ item }}"
    state: directory
    owner: pss
    group: pss
    recurse: yes
    mode: 0755
  with_items:
    - /srv/www/pss
    - /srv/www/pss/tmp
    - /srv/www/pss/log

# Krazy hijinx ensue to get around having a private GitHub repo for the pss
# assets gem...

- name: Temporarily copy private key for GitHub
  # This will be used by build_pss.sh
  copy: >-
      src={{ github_private_key_path | default("~/.ssh/id_rsa") }}
      dest=/home/pss/git_private_key
      owner=pss group=pss mode=0600
  when: pss_include_branding

- name: Stop Unicorn (gracefully)
  # Unicorn is stopped completely, and later restarted, because we assume that
  # preload_app is true, and this option means that a SIGHUP to reload Unicorn's
  # configuration won't cause it to reload program code.  In a setting other than
  # development, the NGINX reverse-proxy in front of Unicorn will be routing requests
  # to the other servers in the same pool.
  service: name=unicorn_pss state=stopped

- name: Assert that Unicorn pid and socket files are not present
  # A prior failure may have left them behind.
  file: >-
    path="{{ item }}" state=absent
  with_items:
    - /srv/www/pss/tmp/unicorn_pss.pid
    - /srv/www/pss/tmp/unicorn_pss.sock

- name: Build primary-source-sets app
  script: >-
    build_pss.sh "{{ pss_rbenv_version }}"
    {{ 'branding' if pss_include_branding else '' }}
  become_user: pss
  environment:
    RAILS_ENV: "{{ pss_rails_env }}"

- name: Ensure existence of uploads directory
  file: >-
      path=/srv/www/pss/public/uploads state=directory
      owner=pss group=pss mode=0755 recurse=yes

- name: Start Unicorn
  service: name=unicorn_pss state=started

- name: Remove temporary private key for GitHub
  file: path=/home/pss/git_private_key state=absent
