---

siteproxy_503_message: >-
  This part of the site is temporarily unavailable.  Please check back
  in a few minutes!

# Sizes of NGINX shared memory zones for storing states of requests and
# connections, for rate limiting.
# See:
# http://nginx.org/en/docs/http/ngx_http_limit_conn_module.html#limit_conn_zone
# http://nginx.org/en/docs/http/ngx_http_limit_req_module.html#limit_req_zone
siteproxy_nginx_conn_zone_size: 10m
siteproxy_nginx_req_zone_size: 10m
# Zones for specific areas of the site:
siteproxy_bookshelf_conn_zone_size: 10m
siteproxy_bookshelf_req_zone_size: 10m

# Default maximum connections per address, where connection-limiting is
# performed
siteproxy_nginx_default_max_conn: 10
# Maximum connections per address for specific areas of the site:
siteproxy_bookshelf_max_conn: 2

# Default maximum request rate, where rate-limiting is performed
siteproxy_nginx_default_req_rate: 10r/s
# Maximum request rates for specific areas of the site:
siteproxy_bookshelf_req_rate: 1r/s

# Default number of requests that are delayed for serving if a client's
# requests per second goes over its threshold.
# See http://nginx.org/en/docs/http/ngx_http_limit_req_module.html#limit_req
siteproxy_nginx_default_req_burst: 20

# Level at which connection-limiting events will be logged
siteproxy_nginx_limit_conn_log_level: notice
# Level at which rate-limiting events will be logged.  Note that when requests
# are simply delayed (per the rate and burst parameters), they will be logged at
# one level lower.
siteproxy_nginx_limit_req_log_level: notice

# Maximum disk space used by the NGINX cache. Our default is 6 Gb.
siteproxy_nginx_cache_max_size: 1024m
# Size of shared memory zone that is used for NGINX cache
siteproxy_nginx_cache_shmem_size: 100m
# How long an item can remain in the cache without being accessed, independently
# of how long its expiration time is, or the value of the proxy_cache_valid
# directive:
siteproxy_nginx_cache_inactive_time: 1d

siteproxy_self_ssl: false

siteproxy_redirect_home_path: /info

# Whether to disallow robots, when they would normally be allowed; for example,
# when level == production
siteproxy_disallow_robots: false
